name: Build and publish
on:
  release:
    types: [created]
jobs:
  run-build-then-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15.6'
      - run: .github/build
#      - name: build go binaries
#        uses: skx/github-action-build@master
#      - uses: actions/upload-artifact@main
#        with:
#          name: github governance artifacts
#          path: out/**/prettyJson
#      - name: Upload the artifacts
#        uses: skx/github-action-publish-binaries@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN }}
#        with:
#          releaseId: 0.1
#          args: out/darwin/amd64/prettyJson out/linux/amd64/prettyJson out/windows/386/prettyJson
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./out/prettyJson.zip
          asset_name: prettyJson.zip
          asset_content_type: application/zip